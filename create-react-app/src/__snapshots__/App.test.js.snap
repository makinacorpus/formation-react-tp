// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> component should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Nominatim
          data={Array []}
          handleChange={[Function]}
          handleInput={[Function]}
          handleSubmitControlled={[Function]}
          handleSubmitUncontrolled={[Function]}
          inputValue="Toulouse"
/>,
        <Map
          changeBBox={[Function]}
          geojson={undefined}
          id="map"
          markers={Array []}
/>,
        <RefreshIndicator
          left={70}
          loadingColor="#FF9800"
          percentage={0}
          size={50}
          status="hide"
          style={
                    Object {
                              "display": "inline-block",
                              "left": "unset",
                              "position": "absolute",
                              "right": "1rem",
                              "top": "1rem",
                              "transform": "unset",
                              "zIndex": 10000,
                            }
          }
          top={0}
/>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "data": Array [],
          "handleChange": [Function],
          "handleInput": [Function],
          "handleSubmitControlled": [Function],
          "handleSubmitUncontrolled": [Function],
          "inputValue": "Toulouse",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "changeBBox": [Function],
          "geojson": undefined,
          "id": "map",
          "markers": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "left": 70,
          "loadingColor": "#FF9800",
          "percentage": 0,
          "size": 50,
          "status": "hide",
          "style": Object {
            "display": "inline-block",
            "left": "unset",
            "position": "absolute",
            "right": "1rem",
            "top": "1rem",
            "transform": "unset",
            "zIndex": 10000,
          },
          "top": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Nominatim
            data={Array []}
            handleChange={[Function]}
            handleInput={[Function]}
            handleSubmitControlled={[Function]}
            handleSubmitUncontrolled={[Function]}
            inputValue="Toulouse"
/>,
          <Map
            changeBBox={[Function]}
            geojson={undefined}
            id="map"
            markers={Array []}
/>,
          <RefreshIndicator
            left={70}
            loadingColor="#FF9800"
            percentage={0}
            size={50}
            status="hide"
            style={
                        Object {
                                    "display": "inline-block",
                                    "left": "unset",
                                    "position": "absolute",
                                    "right": "1rem",
                                    "top": "1rem",
                                    "transform": "unset",
                                    "zIndex": 10000,
                                  }
            }
            top={0}
/>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data": Array [],
            "handleChange": [Function],
            "handleInput": [Function],
            "handleSubmitControlled": [Function],
            "handleSubmitUncontrolled": [Function],
            "inputValue": "Toulouse",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "changeBBox": [Function],
            "geojson": undefined,
            "id": "map",
            "markers": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "left": 70,
            "loadingColor": "#FF9800",
            "percentage": 0,
            "size": 50,
            "status": "hide",
            "style": Object {
              "display": "inline-block",
              "left": "unset",
              "position": "absolute",
              "right": "1rem",
              "top": "1rem",
              "transform": "unset",
              "zIndex": 10000,
            },
            "top": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
